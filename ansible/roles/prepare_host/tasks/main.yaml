---
- name: include package download and configuration
  ansible.builtin.import_tasks: create_packages.yaml

- name: include tasks for operatorversions (rh index)
  ansible.builtin.import_tasks: create_operator_versions.yaml
  vars:
    operator_catalog: "registry.redhat.io/redhat/redhat-operator-index"
    operators: "{{ rh_operators }}"
  run_once: false
  when: ( rh_operators is defined ) and
        ( rh_operators | length > 0 )

- name: set operatorversions (rh index)
  ansible.builtin.set_fact:
    rh_operator_packages: "{{ operator_versions }}"

- name: include tasks for operatorversions (certified index)
  ansible.builtin.import_tasks: create_operator_versions.yaml
  vars:
    operator_catalog: "registry.redhat.io/redhat/certified-operator-index"
    operators: "{{ certified_operators }}"
  when: ( certified_operators is defined ) and
        ( certified_operators | length > 0 )

- name: set operatorversions (certified index)
  ansible.builtin.set_fact:
    certified_operator_packages: "{{ operator_versions }}"
  when: ( certified_operators is defined ) and
        ( certified_operators | length > 0 )

- name: generate ImageSetConfiguration
  ansible.builtin.template:
    src: ./templates/imagesetconfiguration.yaml.j2
    dest: "{{ lookup('ansible.builtin.env', 'HOME') }}/ocp_tools/configs/imagesetconfiguration.yaml"
    mode: 0644

# it might be useful to make this an async task
- name: mirror to local disk
  ansible.builtin.command:
    cmd: oc-mirror --config "{{ lookup('ansible.builtin.env', 'HOME') }}/ocp_tools/configs/imagesetconfiguration.yaml" "file://{{ mirror_data_dir }}"
    creates: "{{ mirror_data_dir }}/mirror_seq1_000000.tar"
  register: mirror_result
  tags:
   - mirror

- name: create manifests
  ansible.builtin.command:
    cmd: oc-mirror --from={{ mirror_data_dir }}/mirror_seq1_000000.tar --manifests-only docker://{{ mirror_registry_hostname }}
    chdir: /tmp
    creates: oc-mirror-workspace
  register: manifests_out
  tags:
    - mirror
    - manifests

- name: register folder fact
  ansible.builtin.set_fact:
    oc_mirror_manifest_icsp: "/tmp/{{ manifests_out.stdout_lines | regex_search('oc-mirror-workspace/results-[0-9]{10}') }}/imageContentSourcePolicy.yaml"
  tags:
    - mirror
    - manifests

- name: load imagecontentset
  ansible.builtin.set_fact:
    oc_mirror_imagecontentset: "{{ lookup('ansible.builtin.file', oc_mirror_manifest_icsp ) | from_yaml_all  }}"
  tags:
    - mirror
    - manifests

- name: debug imagecontentset
  ansible.builtin.debug:
    var: oc_mirror_imagecontentset
  tags:
    - mirror
    - manifests
    - never

- name: include tasks for ssh keypair
  ansible.builtin.import_tasks: create_ssh_keypair.yaml
  when: ocp_ssh_pub is undefined or
        ocp_ssh_pub == None or
        ocp_ssh_pub| length == 0
  tags:
    - ssh_keypair

- name: generate install-config
  ansible.builtin.template:
    src: ./templates/install-config.yaml.j2
    dest: "{{ lookup('ansible.builtin.env', 'HOME') }}/ocp_tools/configs/install-config.yaml"
    mode: 0600
  tags:
    - install_configs

- name: generate agent-config
  ansible.builtin.template:
    src: ./templates/agent-config.yaml.j2
    dest: "{{ lookup('ansible.builtin.env', 'HOME') }}/ocp_tools/configs/agent-config.yaml"
    mode: 0600
  tags:
    - install_configs
